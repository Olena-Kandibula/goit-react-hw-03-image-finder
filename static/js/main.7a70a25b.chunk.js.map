{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","APIService/APIservice.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","ImagesError/ImagesError.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleChange","e","value","currentTarget","setState","reset","handleSubmit","preventDefault","newSearch","trim","toLowerCase","props","onSubmit","alert","className","s","searchbar","logo","href","src","alt","width","this","searchForm","type","searchFormButton","size","searchFormButtonLabel","searchFormInput","autoComplete","onChange","pattern","autoFocus","placeholder","Component","prototypes","PropTypes","func","api","fetchImg","page","url","fetch","then","response","json","data","catch","error","console","worm","Modal","escFunction","bind","event","keyCode","closeModal","document","addEventListener","removeEventListener","createPortal","overlay","modal","children","getElementById","protoType","ImageGalleryItem","stateModal","urlImgModal","openModal","target","dataset","images","map","image","imageGalleryItem","onClick","imageGalleryItemImage","largeImageURL","webformatURL","tag","id","array","ImagesError","errorQuery","errorSearchQuery","string","Button","addImages","pages","currentPage","message","disabled","button","ImageGallery","imagesTotal","status","nextPage","imagesAPI","prevState","hits","finally","window","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevQuery","nextQuery","total","totalHits","availablePages","Math","ceil","sl","loader","color","height","timeout","imageGallery","App","formSubmitHandler","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a70a25b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__cULyn\",\"modal\":\"Modal_modal__1Vs_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__2OULF\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__1BGsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3Ppio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__X3BZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1p3B_\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Searchbar/Searchbar.module.css';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\n\r\n\r\nclass Searchbar extends Component {\r\n    \r\n    state = {        \r\n        searchQuery : '',\r\n    }      \r\n\r\n    handleChange = e => {\r\n    const { value } = e.currentTarget;\r\n        this.setState({ searchQuery: value });\r\n        \r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ searchQuery: '' });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        \r\n      const { searchQuery } = this.state;\r\n\r\n      const newSearch = searchQuery.trim().toLowerCase();\r\n        \r\n      if (newSearch === '') {\r\n          alert('Input is empty');\r\n          return;\r\n        }\r\n\r\n        this.props.onSubmit(newSearch);\r\n    \r\n        this.reset();\r\n        \r\n    };\r\n    \r\n    render() {\r\n\r\n        return (\r\n\r\n            <header className={s.searchbar}>\r\n\r\n                <div className={s.logo}>\r\n                    <a href=\"https://pixabay.com/\">\r\n                        <img src=\"https://pixabay.com/static/img/public/medium_rectangle_a.png\"\r\n                            alt=\"Pixabay\" width=\"48\"                            \r\n                        />\r\n                    </a>\r\n                </div>\r\n\r\n                <form onSubmit={this.handleSubmit}\r\n                    className={s.searchForm}>\r\n                    \r\n                    <button\r\n                        type=\"submit\"\r\n                        className={s.searchFormButton}\r\n                    >\r\n                        <BiSearchAlt size=\"20\" />\r\n                        <span className={s.searchFormButtonLabel}\r\n                        >\r\n                        Search\r\n                        </span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.searchFormInput}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.searchQuery}\r\n                        onChange={this.handleChange}\r\n                        \r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n\r\n                </form>                 \r\n\r\n            </header>\r\n\r\n        );        \r\n    }\r\n\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.prototypes = {\r\nonSubmit: PropTypes.func,\r\n}","const BASE_URL = 'https://pixabay.com/api/';\r\n const API_KEY = '22960570-8de4834e5e1a62c8570402763';\r\n        \r\n\r\nfunction fetchImg(searchQuery, page) {\r\n     \r\n    const url = `${BASE_URL}?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`\r\n   \r\n     return fetch(url)\r\n              \r\n         .then(response => response.json())\r\n         \r\n         .then(data =>  data)\r\n        \r\n        .catch(error => console.worm(error));\r\n    \r\n}\r\n\r\nconst api = { fetchImg };\r\n\r\nexport default api;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Modal.module.css';\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n     constructor(props){\r\n        super(props);\r\n        this.escFunction = this.escFunction.bind(this);\r\n    }\r\n\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {      \r\n            this.props.closeModal();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    render() {\r\n\r\n        return createPortal(\r\n            \r\n            <div className={s.overlay}\r\n            >\r\n                <div className={s.modal}\r\n                >\r\n                    {this.props.children}\r\n                    \r\n                </div>\r\n                \r\n            </div>,    \r\n        \r\n            document.getElementById('modal-root'),\r\n        \r\n        );\r\n        \r\n    }\r\n    \r\n}\r\n     \r\nModal.protoType = {\r\n  closeModal: PropTypes.func,\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\n\r\nclass ImageGalleryItem extends Component {\r\n\r\n  state = {\r\n    stateModal: false,\r\n    urlImgModal:'',\r\n  };\r\n\r\n  openModal = e => {\r\n\r\n    this.setState({\r\n\r\n      stateModal: true,\r\n      urlImgModal: e.target.dataset.url\r\n    });\r\n    \r\n  };\r\n\r\n  closeModal = e => {\r\n\r\n    this.setState({\r\n\r\n      stateModal: false\r\n      \r\n    });    \r\n\r\n  };\r\n\r\n  render() {\r\n      return (\r\n        <>\r\n          {this.props.images.map(image => (\r\n              \r\n            <li className ={s.imageGalleryItem}\r\n              key={image.id}\r\n            >\r\n              <img\r\n                onClick={this.openModal}\r\n                className={s.imageGalleryItemImage}\r\n                data-url={image.largeImageURL}\r\n                src={image.webformatURL} \r\n                alt={image.tag} \r\n              />\r\n\r\n            </li>\r\n\r\n            ))}\r\n              \r\n          {this.state.stateModal && (\r\n            \r\n            <Modal\r\n              closeModal={this.closeModal}\r\n            >\r\n              \r\n            <img\r\n              src={this.state.urlImgModal}\r\n              alt=\"\"\r\n              \r\n            />\r\n          </Modal>\r\n          )}\r\n          \r\n        </>\r\n        \r\n    );\r\n    \r\n  }\r\n}\r\n\r\nImageGalleryItem.protoType = {\r\n  images: PropTypes.array,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\n\r\n\r\nfunction ImagesError({ errorQuery }) {\r\n  \r\n  return <p >Images with the name \"{errorQuery}\" were not found,\r\n    try again! </p>;\r\n}\r\n\r\nImagesError.protoType = {\r\n  errorSearchQuery: PropTypes.string,\r\n};\r\n\r\nexport default ImagesError;","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\n\r\nfunction Button({ addImages, pages, currentPage }) {\r\n        \r\n  const message = (currentPage < pages) ? 'Load more...' : \"That's all\";\r\n\r\n  const disabled = (currentPage < pages) ? false : true;\r\n  \r\n  return (\r\n    <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          onClick={() => addImages()}\r\n          disabled = { disabled}\r\n      >\r\n         \r\n      {message}\r\n      \r\n    </button>\r\n  );\r\n}\r\n\r\nButton.protoType = {\r\n    addImages: PropTypes.func,\r\n    pages:PropTypes.string,\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport imagesAPI from '../../APIService/APIservice';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport ImagesError from '../../ImagesError/ImagesError';\r\nimport Button from '../Button/Button';\r\n\r\n\r\nimport s from '../ImageGallery/ImageGallery.module.css';\r\nimport sl from '../Loader/Loader.module.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n\r\nclass ImageGallery extends Component {\r\n\r\n    state = {        \r\n        images: [],\r\n        imagesTotal: null,\r\n        error: null,\r\n        status: 'idle',\r\n        currentPage: 1,\r\n        searchQuery:'',\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n     \r\n        const prevQuery = prevProps.searchQuery;\r\n        const nextQuery = this.props.searchQuery;\r\n        \r\n        const { currentPage } = this.state;\r\n        \r\n        \r\n        if (prevQuery !== nextQuery) {\r\n            \r\n            this.setState({\r\n                status: 'pending',\r\n                currentPage: 1,\r\n            });\r\n            \r\n            \r\n            imagesAPI\r\n                .fetchImg(nextQuery, currentPage)\r\n                \r\n                .then(images => {\r\n\r\n                    if (images.total !== 0) {                       \r\n                        \r\n                        this.setState({\r\n                            imagesTotal: images.totalHits,\r\n                            searchQuery: nextQuery,\r\n                        })\r\n\r\n                        return this.setState({\r\n                            images: images.hits,\r\n                            status: 'resolved',\r\n                        });\r\n                    }\r\n\r\n                    return this.setState({  status: 'rejected' });\r\n                })\r\n                // .catch(error => console.warn(error))\r\n                .catch(error => this.setState({error, status: 'rejected'}))\r\n                         \r\n        }\r\n       \r\n    }\r\n\r\n    addImages = () => {\r\n\r\n        this.setState({ status: 'pending'});\r\n       \r\n        const {  searchQuery, currentPage } = this.state;\r\n        let nextPage = currentPage + 1;\r\n        \r\n        imagesAPI\r\n        \r\n            .fetchImg(searchQuery, nextPage)\r\n            \r\n            .then(data => {\r\n          \r\n                this.setState(prevState => {\r\n                    \r\n                    return {              \r\n                        images: [...prevState.images, ...data.hits],                        \r\n                        status: 'resolved',            \r\n                        currentPage: nextPage,\r\n            \r\n                    };                    \r\n                });           \r\n                \r\n            })\r\n            \r\n            .finally(() => {            \r\n                window.scrollTo({                \r\n                    top: document.documentElement.scrollHeight,                    \r\n                    behavior: 'smooth',            \r\n                });                \r\n            });        \r\n    };\r\n    \r\n\r\n    render() {\r\n        const { images, status, imagesTotal, currentPage } = this.state;\r\n        \r\n        const { searchQuery } = this.props;\r\n        \r\n        const availablePages = Math.ceil(imagesTotal/12);       \r\n        \r\n        if (status === 'idle') {\r\n            return <div>Input search name, please</div>\r\n        }\r\n\r\n        if (status === 'pending') {           \r\n            return <Loader className = {sl.loader}\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={80}\r\n                width={80}\r\n                timeout={3000}\r\n            />           \r\n        }\r\n\r\n        if (status === 'rejected') {\r\n\r\n            return <ImagesError                \r\n                errorQuery={searchQuery}\r\n                \r\n            />            \r\n        }\r\n\r\n        if ((status === 'resolved') && (availablePages > 1)) {          \r\n            \r\n            return (\r\n                <>\r\n                    <ul className={s.imageGallery}>                 \r\n                        <ImageGalleryItem\r\n                            images={images}\r\n                        />                \r\n                    </ul>\r\n                \r\n                    <Button\r\n                        pages={availablePages}\r\n                        currentPage={currentPage}                        \r\n                        addImages={this.addImages}                         \r\n                    />                    \r\n                </>                \r\n            );            \r\n        }\r\n\r\n\r\n            if (status === 'resolved' || availablePages ===1 ) {\r\n            \r\n                return (                \r\n                    <ul className={s.imageGallery}>                 \r\n                        <ImageGalleryItem                            \r\n                            images={images}                            \r\n                        />               \r\n                </ul>                \r\n            );\r\n        }       \r\n        \r\n    }    \r\n}\r\n    \r\nImageGallery.prototypes = {    \r\n    searchQuery:PropTypes.string    \r\n}\r\n\r\nexport default ImageGallery;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    searchQuery: '',\r\n  } \r\n\r\n  formSubmitHandler = newSearch => {\r\n    \r\n    this.setState({ searchQuery: newSearch })\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n\r\n      <div className=\"App\">\r\n        \r\n        <Searchbar onSubmit={this.formSubmitHandler}\r\n        />      \r\n        \r\n        <ImageGallery\r\n          searchQuery={this.state.searchQuery}\r\n        />         \r\n        \r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__xFmR5\",\"logo\":\"Searchbar_logo__p0ZMZ\",\"searchForm\":\"Searchbar_searchForm__211Jw\",\"searchFormButton\":\"Searchbar_searchFormButton__eiMNS\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__3x66H\",\"searchFormInput\":\"Searchbar_searchFormInput__kouHs\"};"],"sourceRoot":""}